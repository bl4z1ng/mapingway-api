name: "mapingway"

services:
  app:
    container_name: "api"
    image: "mapingway-api-from-compose:${API_VERSION}"
    build:
      context: ../
      dockerfile: /.docker/app/Dockerfile
    ports:
      - ${APPLICATION_EXPOSED_PORT_HTTP}:80
      - ${APPLICATION_EXPOSED_PORT_HTTPS}:443
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=localhost;Host=db;Port=5432;Database=${DATABASE};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD};Integrated Security=true;Pooling=true;Encoding=UTF8;
      # Do not create development certificate in an environment that will be distributed.
      ASPNETCORE_Kestrel__Certificates__Default__Password: ${ENVIRONMENT_DEFAULT_CERTIFICATE_PASSWORD}
      ASPNETCORE_Kestrel__Certificates__Default__Path: /root/.aspnet/https/Mapingway.API.pfx
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/

  db:
    container_name: "database"
    image: "mapingway-db-from-compose:${DB_VERSION}"
    build:
      context: ../
      dockerfile: /.docker/localdb/Dockerfile
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mapingway-db:/var/lib/postgresql/data
    ports:
      - ${DATABASE_EXPOSED_PORT}:5432
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mapingway-db:
    external: true